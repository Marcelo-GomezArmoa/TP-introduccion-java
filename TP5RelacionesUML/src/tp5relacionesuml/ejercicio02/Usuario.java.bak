package tp5relacionesuml.ejercicio02;

/**
 * Clase Usuario - Ejemplo de ASOCIACIÓN BIDIRECCIONAL
 * El usuario puede existir independientemente del celular
 * Mantiene una referencia al celular (si lo tiene)
 */
public class Usuario {
    private String nombre;
    private String dni;
    private Celular celular; // Referencia bidireccional

    // Constructor
    public Usuario(String nombre, String dni) {
        this.nombre = nombre;
        this.dni = dni;
    }

    // Getters y Setters
    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getDni() {
        return dni;
    }

    public void setDni(String dni) {
        this.dni = dni;
    }

    public Celular getCelular() {
        return celular;
    }

    // Método para establecer la relación bidireccional
    public void setCelular(Celular celular) {
        // Si el celular ya es el mismo, no hacer nada (evita bucle infinito)
        if (this.celular == celular) {
            return;
        }
        
        // Eliminar relación anterior si existe
        if (this.celular != null) {
            this.celular.setUsuario(null);
        }

        this.celular = celular;

        // Establecer la relación bidireccional
        if (celular != null && celular.getUsuario() != this) {
            celular.setUsuario(this);
        }
    }

    @Override
    public String toString() {
        return "Usuario{" +
                "nombre='" + nombre + '\'' +
                ", dni='" + dni + '\'' +
                ", tieneCelular=" + (celular != null) +
                '}';
    }
}
